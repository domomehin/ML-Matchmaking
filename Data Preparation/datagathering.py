# -*- coding: utf-8 -*-
"""datagathering.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1zTr8765fv1MtLaF3yXZVEFguKNGZCTvc
"""

import requests
import pandas as pd
import time
import random
import re
import numpy as np
import _pickle as pickle
from tqdm.notebook import tqdm
from bs4 import BeautifulSoup as bs
from scipy.stats import halfnorm

from itertools import permutations
 
# Get all permutations of length 4
categories = ["Style"]
perm = permutations(["Classic", "Elegant", "Dramatic", "Feminine", "Sexy", "Masculine", "Romantic", "Casual", "Streetwear", "Glam", "Minimalist", "Vintage", "Boho", "Editorial", "Androgynous", "Edgy", "Preppy", "Maximalist"], 4)
styles = []
# Print the obtained permutations
for i in list(perm):
    styles.append(', '.join(i))
# styles = np.array(styles)
# Creating a DF from the style permutations
random.shuffle(styles)
styles = pd.DataFrame(styles, columns=["Profiles"])

styles

# Creating a DF of the style categories
style_df = pd.DataFrame(columns=categories)
print(style_df)
# Filling in Data
for i in style_df.columns:
    
    # Range of numbers to represent different labels in each category
    style_df[i] = np.random.randint(0,18, styles.shape[0])
    
    # Logic: The numbers represent a specific choice within the categories
    # So your number 1 preferred category will have a one and the least will have 18 etc.

style_df

# Joining the two dataframes
final_df = styles.join(style_df)
final_df

with open("profiles.pkl", "wb") as fp:
    pickle.dump(final_df, fp)

with open("profiles.pkl",'rb') as fp:
    df = pickle.load(fp)

final_df.to_csv (r'profiles_dataframe.csv', index = False, header=True)

# Removing the numerical data
df = df[['Profiles']]

from numpy.ma.core import default_fill_value
# Probability dictionary
p = {}
style_types = ["Classic", "Elegant", "Dramatic", "Feminine", "Sexy", "Masculine", 
               "Romantic", "Casual", "Streetwear", "Glam", "Minimalist", "Vintage", 
               "Boho", "Editorial", "Androgynous", "Edgy", "Preppy", "Maximalist"]

p['style'] = [0.11, 0.10, 0.07, 0.13, 0.04, 0.06,
              0.06, 0.04, 0.01, 0.01, 0.10, 0.03,
              0.03, 0.07, 0.02, 0.04, 0.01, 0.07]

# Age (generating random numbers based on half normal distribution)
age = halfnorm.rvs(loc=18,scale=8, size=df.shape[0]).astype(int)
# gender = pd.DataFrame(columns=["Gender"])
gender = []
for i in range(df.shape[0]):
    # Range of numbers to represent different labels in each category
    number = random.randint(0, 2)
    if number == 1:
      gender.append("Female")
    elif number == 2:
      gender.append("Non-Binary")
    else:
      gender.append("Male")
gender = pd.DataFrame(gender, columns=["Gender"])

df

final_categories = [style_types, age, gender]
names = ["Style", "Age", "Gender"]
combined = dict(zip(names, final_categories))

"""### Make random values for every category"""

# Looping through and assigning random values
for name, categories in combined.items():
    if name == 'Age' or name == 'Gender':
        # Generating random ages based on a normal distribution
        df[name] = categories
    else:
        # Picking 3 from the list 
        try:
            df[name] = list(np.random.choice(categories, size=(df.shape[0],1,3), p=p[name]))
        except:
            df[name] = list(np.random.choice(categories, size=(df.shape[0],1,3)))
        
        df[name] = df[name].apply(lambda x: list(set(x[0].tolist())))

df

with open("refined_profiles.pkl",'wb') as fp:
    pickle.dump(df, fp)